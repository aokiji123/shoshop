/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as FavoritesImport } from './routes/favorites'
import { Route as CartImport } from './routes/cart'
import { Route as IndexImport } from './routes/index'
import { Route as ItemsIndexImport } from './routes/items.index'
import { Route as ItemsIdImport } from './routes/items.$id'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesRoute = FavoritesImport.update({
  id: '/favorites',
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIndexRoute = ItemsIndexImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIdRoute = ItemsIdImport.update({
  id: '/items/$id',
  path: '/items/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/items/$id': {
      id: '/items/$id'
      path: '/items/$id'
      fullPath: '/items/$id'
      preLoaderRoute: typeof ItemsIdImport
      parentRoute: typeof rootRoute
    }
    '/items/': {
      id: '/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/favorites': typeof FavoritesRoute
  '/profile': typeof ProfileRoute
  '/items/$id': typeof ItemsIdRoute
  '/items': typeof ItemsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/favorites': typeof FavoritesRoute
  '/profile': typeof ProfileRoute
  '/items/$id': typeof ItemsIdRoute
  '/items': typeof ItemsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/favorites': typeof FavoritesRoute
  '/profile': typeof ProfileRoute
  '/items/$id': typeof ItemsIdRoute
  '/items/': typeof ItemsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/favorites' | '/profile' | '/items/$id' | '/items'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/favorites' | '/profile' | '/items/$id' | '/items'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/favorites'
    | '/profile'
    | '/items/$id'
    | '/items/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartRoute: typeof CartRoute
  FavoritesRoute: typeof FavoritesRoute
  ProfileRoute: typeof ProfileRoute
  ItemsIdRoute: typeof ItemsIdRoute
  ItemsIndexRoute: typeof ItemsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartRoute: CartRoute,
  FavoritesRoute: FavoritesRoute,
  ProfileRoute: ProfileRoute,
  ItemsIdRoute: ItemsIdRoute,
  ItemsIndexRoute: ItemsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cart",
        "/favorites",
        "/profile",
        "/items/$id",
        "/items/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/favorites": {
      "filePath": "favorites.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/items/$id": {
      "filePath": "items.$id.tsx"
    },
    "/items/": {
      "filePath": "items.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
