<?xml version="1.0"?>
<doc>
    <assembly>
        <name>backend</name>
    </assembly>
    <members>
        <member name="M:backend.Controllers.ProductController.GetProducts">
            <summary>
            Retrieves a list of all products.
            </summary>
            <returns>A list of products.</returns>
            <response code="200">Returns the list of products.</response>
            <response code="401">If the user is not authenticated.</response>
        </member>
        <member name="M:backend.Controllers.ProductController.GetProduct(System.Guid)">
            <summary>
            Retrieves a specific product by ID.
            </summary>
            <param name="id">The ID of the product.</param>
            <returns>The product details.</returns>
            <response code="200">Returns the product.</response>
            <response code="401">If the user is not authenticated.</response>
            <response code="404">If the product is not found.</response>
        </member>
        <member name="M:backend.Controllers.ProductController.GetPopularProduct(System.Int32)">
            <summary>
            Retrieves a list of the most popular products based on likes.
            </summary>
            <param name="limit">The maximum number of products to return (default: 10).</param>
            <returns>A list of the most-liked products.</returns>
            <response code="200">Returns the list of popular products.</response>
            <response code="400">If the limit is less than 1.</response>
            <response code="401">If the user is not authenticated.</response>
        </member>
        <member name="M:backend.Controllers.ProductController.CreateProduct(backend.Controllers.ProductController.CreateUpdateProductDto,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Creates a new product (admin only).
            </summary>
            <param name="createDto">The product details to create.</param>
            <returns>The created product.</returns>
            <response code="201">Returns the created product.</response>
            <response code="400">If the input is invalid.</response>
            <response code="401">If the user is not authenticated.</response>
            <response code="403">If the user is not an admin.</response>
        </member>
        <member name="M:backend.Controllers.ProductController.UpdateProduct(System.Guid,backend.Controllers.ProductController.CreateUpdateProductDto,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Updates an existing product (admin only).
            </summary>
            <param name="id">The ID of the product to update.</param>
            <param name="updateDto">The updated product details.</param>
            <returns>The updated product.</returns>
            <response code="200">Returns the updated product.</response>
            <response code="400">If the input is invalid.</response>
            <response code="401">If the user is not authenticated.</response>
            <response code="403">If the user is not an admin.</response>
            <response code="404">If the product is not found.</response>
        </member>
        <member name="M:backend.Controllers.ProductController.DeleteProduct(System.Guid)">
            <summary>
            Deletes a product by ID (admin only).
            </summary>
            <param name="id">The ID of the product to delete.</param>
            <returns>Confirmation of deletion.</returns>
            <response code="200">Product deleted successfully.</response>
            <response code="401">If the user is not authenticated.</response>
            <response code="403">If the user is not an admin.</response>
            <response code="404">If the product is not found.</response>
        </member>
        <member name="T:backend.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:backend.Migrations.AddSizeAndColorToProduct">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.AddSizeAndColorToProduct.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.AddSizeAndColorToProduct.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.AddSizeAndColorToProduct.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:backend.Migrations.MakeImageOptional">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.MakeImageOptional.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.MakeImageOptional.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:backend.Migrations.MakeImageOptional.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
